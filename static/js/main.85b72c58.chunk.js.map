{"version":3,"sources":["components/fragments/Tab/ActivitySelect.jsx","components/fragments/PatientCal.js","utils/Regex.jsx","components/fragments/Tab/PatientForm.jsx","components/fragments/Tab/GoalSelect.jsx","components/fragments/PlanCard.js","components/fragments/PlanCardBox.jsx","components/DisorderedEating.jsx","components/fragments/PatientRmr.jsx","components/PhaseOne.js","App.js","reportWebVitals.js","index.js"],"names":["ActivitySelect","patient","setPatient","className","activity","onClick","value","PatientCal","rmr","goal","useState","undefined","dailyCal","useEffect","validHeight","RegExp","PatientForm","heightInput","useRef","weightInput","dobMonthInput","dobDayInput","dobYearInput","genderInput","handleChange","e","target","name","height","weight","dob","month","day","year","sex","resetInput","test","heightstr","split","map","item","parseInt","heightFt","heightIn","ref","onChange","type","placeholder","onFocus","GoalSelect","setGoal","PlanCard","plan","selected","setSelected","id","desc","dist","PlanCardBox","tier","DisorderedEating","PatientRmr","setRmr","weightKg","heightCm","base","Math","floor","age","val","PhaseOne","App","active","setActive","submitted","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85b72c58.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function ActivitySelect({ patient, setPatient  }) {\r\n    return (\r\n        <div className='activitygrp'>\r\n            <h4>Daily Activity Level</h4>\r\n          <div className=\"cardbox\">\r\n            <div\r\n              className={\r\n                patient.activity === 0\r\n                  ? `activityCard selected`\r\n                  : \"activityCard\"\r\n              }\r\n              onClick={() => setPatient({ ...patient, activity: 0 })}\r\n            >\r\n              <h6>None</h6>\r\n              <p>description</p>\r\n            </div>\r\n            <div\r\n              className={\r\n                patient.activity === 1.2\r\n                  ? `activityCard selected`\r\n                  : \"activityCard\"\r\n              }\r\n              onClick={() => setPatient({ ...patient, activity: 1.2 })}\r\n            >\r\n              <h6>Minimal</h6>\r\n              <p value={1.2}>description</p>\r\n            </div>\r\n            <div\r\n              className={\r\n                patient.activity === 1.3\r\n                  ? `activityCard selected`\r\n                  : \"activityCard\"\r\n              }\r\n              onClick={() => setPatient({ ...patient, activity: 1.3 })}\r\n            >\r\n              <h6>Mild</h6>\r\n              <p value={1.3}>description</p>\r\n            </div>\r\n            <div\r\n              className={\r\n                patient.activity === 1.5\r\n                  ? `activityCard selected`\r\n                  : \"activityCard\"\r\n              }\r\n              onClick={() => setPatient({ ...patient, activity: 1.5 })}\r\n            >\r\n              <h6>Moderate</h6>\r\n              <p value={1.5}>description</p>\r\n            </div>\r\n            <div\r\n              className={\r\n                patient.activity === 1.7\r\n                  ? `activityCard selected`\r\n                  : \"activityCard\"\r\n              }\r\n              onClick={() => setPatient({ ...patient, activity: 1.7 })}\r\n            >\r\n              <h6>Heavy</h6>\r\n              <p value={1.7}>description</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function PatientCal({ rmr, goal }) {\r\n  const [dailyCal, setDailyCal] = useState(undefined);\r\n\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <div className=\"patientDailyCal\">\r\n      <h4>Patient's Recommended Calories/Day:</h4>\r\n      <p>{dailyCal}</p>\r\n    </div>\r\n  );\r\n}\r\n","export const validHeight = new RegExp(/([0-9])'([0-9])([0-9])/)","import React, { useRef, useEffect  } from 'react'\r\n\r\nimport { validHeight } from '../../../utils/Regex';\r\n\r\nexport default function PatientForm({patient, setPatient}) {\r\n    // DOM refs\r\n    const heightInput = useRef(null);\r\n    const weightInput = useRef(null);\r\n    const dobMonthInput = useRef(null);\r\n    const dobDayInput = useRef(null);\r\n    const dobYearInput = useRef(null);\r\n    const genderInput = useRef(null);\r\n\r\n    // Input Handler\r\n    const handleChange = (e) => {\r\n        switch (e.target.name) {\r\n          case \"height\":\r\n            setPatient({\r\n              ...patient,\r\n              height: e.target.value,\r\n            });\r\n            break;\r\n          case \"weight\":\r\n            setPatient({\r\n              ...patient,\r\n              weight: e.target.value,\r\n            });\r\n            break;\r\n          case \"month\":\r\n            setPatient({\r\n              ...patient,\r\n              dob: {\r\n                month: e.target.value,\r\n              }\r\n            })\r\n            break;\r\n          case 'day':\r\n            setPatient({\r\n              ...patient,\r\n              dob: {\r\n                day: e.target.value,\r\n              }\r\n            })\r\n            break;\r\n          case 'year':\r\n            setPatient({\r\n              ...patient,\r\n              dob: {\r\n                year: e.target.value\r\n              }\r\n            });\r\n            break;\r\n          case \"sex\":\r\n            setPatient({\r\n              ...patient,\r\n              sex: e.target.value,\r\n            });\r\n            break;\r\n    \r\n          default:\r\n            break;\r\n        }\r\n      };\r\n      const resetInput = (e) => {\r\n        e.target.value = '';\r\n      }\r\n\r\n      useEffect(() => {\r\n          switch (patient.height) {\r\n              case validHeight.test(patient.height):\r\n                  let heightstr = patient.height.split(\"'\").map((item)=> parseInt(item));\r\n                  setPatient({\r\n                      ...patient,\r\n                      heightFt: heightstr[0],\r\n                      heightIn: heightstr[1],\r\n                  })\r\n                  break;\r\n          \r\n              default:\r\n                  break;\r\n          }\r\n      }, [patient.height])\r\n\r\n    return (\r\n      <div className='mainForm'>\r\n        <h4>Determine Patient's Resting Metabolic Rate (RMR):</h4>\r\n        <div>\r\n          <div className=\"gendergrp\">\r\n            <label>\r\n              Gender\r\n              <select ref={genderInput} name=\"sex\" value={patient.sex} onChange={handleChange}>\r\n                <option value=\"M\">M</option>\r\n                <option value=\"F\">F</option>\r\n              </select>\r\n            </label>\r\n          </div>\r\n          <div className=\"agegrp\">\r\n            <label>Date Of Birth</label>\r\n            <div className=\"dobinputgrp\">\r\n              <label>\r\n              Month\r\n                <input\r\n                  ref={dobMonthInput}\r\n                  type=\"number\"\r\n                  name=\"month\"\r\n                  placeholder=\"Month\"\r\n                  value={patient.dob.month}\r\n                  onChange={handleChange}\r\n                  onFocus={(e)=>resetInput(e)}\r\n                />\r\n              </label>\r\n              <label>\r\n              Day\r\n                <input\r\n                ref={dobDayInput}\r\n                  type=\"number\"\r\n                  name=\"day\"\r\n                  placeholder=\"Day\"\r\n                  value={patient.dob.day}\r\n                  onChange={handleChange}\r\n                  onFocus={(e)=>resetInput(e)}\r\n                />\r\n              </label>\r\n              <label>\r\n              Year\r\n                <input\r\n                ref={dobYearInput}\r\n                  type=\"number\"\r\n                  name=\"year\"\r\n                  value={patient.dob.year}\r\n                  onChange={handleChange}\r\n                  onFocus={(e)=>resetInput(e)}\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n            <div className=\"heightgrp\">\r\n            <label>Height\r\n            <input\r\n              ref={heightInput}\r\n              type=\"text\"\r\n              name=\"height\"\r\n              onChange={handleChange}\r\n              value={patient.height}\r\n              onFocus={(e)=>resetInput(e)}\r\n            />\r\n            </label>\r\n          </div>\r\n          <div className=\"weightgrp\">\r\n            <label>\r\n              Weight\r\n              <input\r\n                ref={weightInput}\r\n                type=\"number\"\r\n                name=\"weight\"\r\n                value={patient.weight}\r\n                onChange={handleChange}\r\n                onFocus={(e)=>resetInput(e)}\r\n              />\r\n              lbs\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function GoalSelect({ goal, setGoal }) {\r\n    return (\r\n        <div className='goalSelect'>\r\n          <ul className=\"patient-goal\">\r\n            <li\r\n              className={goal === \"lose\" ? `goal-item active` : `goal-item`}\r\n              onClick={() => setGoal(\"lose\")}\r\n            >\r\n            Lose\r\n            </li>\r\n            <li\r\n              className={goal === \"maintain\" ? `goal-item active` : `goal-item`}\r\n              onClick={() => setGoal(\"maintain\")}\r\n            >\r\n            Maintain\r\n            </li>\r\n            <li\r\n              className={goal === \"gain\" ? `goal-item active` : `goal-item`}\r\n              onClick={() => setGoal(\"gain\")}\r\n            >\r\n            Gain\r\n            </li>\r\n          </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function PlanCard({ plan, selected, setSelected }) {\r\n  return (\r\n    <div\r\n      className={selected === plan.id ? `plancard selected` : `plancard`}\r\n      onClick={() => setSelected(plan.id)}\r\n    >\r\n      <h4>{plan.name}</h4>\r\n      <p>{plan.desc}</p>\r\n      <div>{plan.dist}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nimport PlanCard from './PlanCard'\r\n\r\nexport default function PlanCardBox({ selected, setSelected }) {\r\n    return (\r\n        <div className='plancard-box'>\r\n            <h6>First Step Interventions</h6>\r\n        <hr />\r\n        <div className='first'>\r\n         <PlanCard\r\n          plan={{\r\n            id: 1,\r\n            name: \"CORE\",\r\n            desc: \"\",\r\n            tier: \"firstStep\",\r\n            dist: \"25P/30F/45C\",\r\n          }}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n        />\r\n        <PlanCard\r\n          plan={{\r\n            id: 2,\r\n            name: \"CORE\",\r\n            desc: \"V/VE\",\r\n            tier: \"firstStep\",\r\n            dist: \"25P/30F/45C\",\r\n          }}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n        />\r\n        <PlanCard\r\n          plan={{\r\n            id: 3,\r\n            name: \"CORE\",\r\n            desc: \"V/VE without Soy\",\r\n            tier: \"firstStep\",\r\n            dist: \"20P/30F/50C\",\r\n          }}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n        />\r\n        <PlanCard\r\n          plan={{\r\n            id: 4,\r\n            name: \"CARDIOMETABOLIC\",\r\n            desc: \"\",\r\n            tier: \"firstStep\",\r\n            dist: \"30P/30F/40C\",\r\n          }}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n        />\r\n        <PlanCard\r\n          plan={{\r\n            id: 5,\r\n            name: \"ELIMINATION/REINTRODUCTION\",\r\n            desc: \"\",\r\n            tier: \"firstStep\",\r\n            dist: \"30P/30F/40C\",\r\n          }}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n        />\r\n        <PlanCard\r\n          plan={{\r\n            id: 6,\r\n            name: \"DETOX\",\r\n            desc: \"\",\r\n            tier: \"firstStep\",\r\n            dist: \"30P/30F/40C\",\r\n          }}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n        />\r\n        </div>\r\n        <h6>Advanced Therapeutic Interventions</h6>\r\n        <hr />\r\n        <div className='advanced'>\r\n        <PlanCard\r\n          plan={{\r\n            id: 7,\r\n            name: \"MITO\",\r\n            desc: \"Reduced carbohydrates with ketogenic option; Reduces inflammation, focus on phytonutrients and high-quality-fats to support antioxidant potential & energy production, vitality and healthy ageing; Appropriate for those dealing with cronic pain, fatigue, and neurologic conditions. Options for dairy free, low-grain and gluten-free.\",\r\n            tier: \"advanced\",\r\n            dist: \"20P/60F/20C\",\r\n          }}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n        />\r\n        <PlanCard\r\n          plan={{\r\n            id: 8,\r\n            name: \"INTERMITTANT FASTING\",\r\n            desc: \"\",\r\n            tier: \"advanced\",\r\n            dist: \"32P/55F/13C\",\r\n          }}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n        />\r\n        <PlanCard\r\n          plan={{\r\n            id: 9,\r\n            name: \"RENEW\",\r\n            desc: \"Dairy, sugar, grain, & gluten free; Reduces inflammation, food cravings and attatchemnts; Promotes healthy detoxification of toxins; Identifies and reduces food triggers; Appropriate for those whit autoimmune, gastrointestinal, neurological, and other chronic health conditions.\",\r\n            tier: \"advanced\",\r\n            dist: \"30P/45F/25C\",\r\n          }}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n        />\r\n        </div>\r\n        <h6>GI Specific Therapeutic Interventions</h6>\r\n        <hr />\r\n        <div className='specific'>\r\n        <PlanCard\r\n          plan={{\r\n            id: 10,\r\n            name: \"LOW FODMAP\",\r\n            desc: \"\",\r\n            tier: \"specific\",\r\n            dist: \"25P/30F/45C\",\r\n          }}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n        />\r\n        <PlanCard\r\n          plan={{\r\n            id: 11,\r\n            name: \"ANTI-CANDIDA\",\r\n            desc: \"\",\r\n            tier: \"specific\",\r\n            dist: \"25P/30F/45C\",\r\n          }}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n        />\r\n        <PlanCard\r\n          plan={{\r\n            id: 12,\r\n            name: \"SPECIFIC CARBOHYDRATE DIET (SCD)\",\r\n            desc: \"\",\r\n            tier: \"specific\",\r\n            dist: \"25P/30F/45C\",\r\n          }}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n        />\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function DisorderedEating() {\r\n    return (\r\n        <div className='disordered-box'>\r\n            <h4>Screening for Disordered Eating</h4>\r\n            <hr />\r\n            <div className='cardbox'>\r\n                <div className='disorderedcard'>\r\n                    <h6>Eating Attitudes Test</h6>\r\n                </div>\r\n                <div className='disorderedcard'>\r\n                    <h6>Mindfulness Eating Guide</h6>\r\n                </div>\r\n                <div className='disorderedcard'>\r\n                    <h6>FAQ's for Clinicians</h6>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nexport default function PatientRmr({ patient }) {\r\n    const [rmr, setRmr] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        let weightKg;\r\n        let heightCm;\r\n        let base;\r\n        // Conversions...\r\n        weightKg = Math.floor(patient.weight * 0.45359237);\r\n        heightCm = Math.floor((patient.heightFt * 12 + patient.heightIn) * 2.54);\r\n        // M/F Calc...\r\n        if (patient.sex === 'M'){\r\n            base = 9.99 * weightKg + 6.25 * heightCm - 4.92 * patient.age + 5;\r\n        } else {\r\n            base = 9.99 * weightKg + 6.25 * heightCm - 4.92 * patient.age - 161\r\n        }\r\n        // Adjust for activity level...\r\n        if (patient.activity !== 0) {\r\n            let val = Math.floor(base * patient.activity)\r\n            setRmr(val);\r\n        } else {\r\n            let val = Math.floor(base);\r\n            setRmr(val);\r\n        }\r\n    }, [patient])\r\n    return (\r\n        <div className='patientrmr'>\r\n            <h4>Patient's Resting Metabolic Rate</h4>\r\n            <p>{rmr}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n// Tab Parts\r\nimport TabControl from \"./fragments/Tab/TabControl\";\r\nimport TabContent from \"./fragments/Tab/TabContent\";\r\n\r\nimport GoalSelect from \"./fragments/Tab/GoalSelect\";\r\n\r\nimport PatientCal from \"./fragments/PatientCal\";\r\nimport PlanCardBox from \"./fragments/PlanCardBox\";\r\nimport PatientForm from \"./fragments/Tab/PatientForm\";\r\nimport ActivitySelect from \"./fragments/Tab/ActivitySelect\";\r\nimport DisorderedEating from \"./DisorderedEating\";\r\nimport PatientRmr from \"./fragments/PatientRmr\";\r\n\r\nexport default function PhaseOne({ patient, setPatient }) {\r\n  // Top Bar Position Check (If we want it to float as you move down to the plans)\r\n  const patientBar = useRef(null);\r\n  // Tab control var if we want it to be a side bar with floating button control\r\n  const [tab, setTab] = useState(false);\r\n\r\n  const [goal, setGoal] = useState(\"maintain\");\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"patientsection\">\r\n        <PatientForm patient={patient} setPatient={setPatient} />\r\n        <div className=\"activitygoal\">\r\n          <PatientRmr patient={patient} />\r\n          <ActivitySelect patient={patient} setPatient={setPatient} />\r\n          <GoalSelect goal={goal} setGoal={setGoal} />\r\n          <PatientCal patient={patient} />\r\n        </div>\r\n      </div>\r\n      <PlanCardBox selected={selected} setSelected={setSelected} />\r\n      <DisorderedEating />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\n\nimport PhaseOne from \"./components/PhaseOne\";\nimport PhaseTwo from \"./components/PhaseTwo\";\nimport PhaseThree from \"./components/PhaseThree\";\n\nimport \"./assets/sass/App.scss\";\n\nfunction App() {\n  const [active, setActive] = useState(1);\n\n  const [patient, setPatient] = useState({\n    height: \"5'8\",\n    heightFt: 0,\n    heightIn: 0,\n    weight: 100,\n    age: 40,\n    dob: {\n      month: 0,\n      day: 0,\n      year: 0,\n    },\n    sex: \"M\",\n    activity: 100,\n    submitted: false,\n  });\n\n  return (\n    <>\n      <PhaseOne\n        active={active}\n        setActive={setActive}\n        patient={patient}\n        setPatient={setPatient}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}