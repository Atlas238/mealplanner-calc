{"version":3,"sources":["utils/Regex.jsx","components/PhaseOne.js","components/fragments/PatientCal.js","components/fragments/PlanCard.js","components/PhaseTwo.js","components/PhaseThree.js","App.js","reportWebVitals.js","index.js"],"names":["validHeight","RegExp","PhaseOne","active","setActive","patient","setPatient","useState","show","content","warn","setWarn","handleChange","e","target","name","height","value","weight","age","sex","className","onClick","type","onChange","activity","console","log","test","heightstr","split","map","item","parseInt","heightFt","heightIn","length","PatientCal","goal","rmr","setRmr","useEffect","weightKg","heightCm","rmrvalue","Math","floor","PlanCard","plan","selected","setSelected","id","desc","PhaseTwo","setGoal","style","width","margin","index","PhaseThree","App","submitted","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01dab773.chunk.js","sourcesContent":["export const validHeight = new RegExp(/([0-9])'([0-9])([0-9])/)","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { validHeight } from \"../utils/Regex\";\r\n\r\nexport default function PhaseOne({ active, setActive, patient, setPatient }) {\r\n  const [warn, setWarn] = useState({\r\n    show: false,\r\n    content: \"\",\r\n  });\r\n  // Input Patient Details, Read About Activity Level\r\n  const handleChange = (e) => {\r\n    switch (e.target.name) {\r\n      case \"height\":\r\n        setPatient({\r\n          ...patient,\r\n          height: e.target.value,\r\n        });\r\n        break;\r\n\r\n      case \"weight\":\r\n        setPatient({\r\n          ...patient,\r\n          weight: e.target.value,\r\n        });\r\n        break;\r\n      case \"age\":\r\n        setPatient({\r\n          ...patient,\r\n          age: e.target.value,\r\n        });\r\n        break;\r\n      case \"sex\":\r\n        setPatient({\r\n          ...patient,\r\n          sex: e.target.value,\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const handleSubmit = () => {\r\n    console.log(patient);\r\n    // Assuming you might have entered a ' character\r\n    if (validHeight.test(patient.height)) {\r\n      console.log(\"Height String matched Regex\");\r\n      let heightstr = patient.height.split(\"'\").map((item) => parseInt(item));\r\n      setPatient({\r\n        ...patient,\r\n        heightFt: heightstr[0],\r\n        heightIn: heightstr[1],\r\n      });\r\n    } else if (patient.height.length === 3) {\r\n      console.log(\"didnt match regex, hoping its three characters long...\");\r\n      let heightstr = patient.height.split(\"\").map((item) => parseInt(item));\r\n      // invalid inches\r\n      if (heightstr[2] > 12) {\r\n        setWarn({\r\n          show: true,\r\n          content:\r\n            \"Looks like you entered an invalid height, check that field and try again. (Accepts both 5'11 or 511 syntax)\",\r\n        });\r\n        return;\r\n      }\r\n      setPatient({\r\n        ...patient,\r\n        heightFt: heightstr[0],\r\n        heightIn: heightstr[2],\r\n      });\r\n      console.log(\"Valid Patient Details from form, Setting Patient Obj\");\r\n      console.log(patient);\r\n      console.log(\"Onwards!\");\r\n      setActive(2);\r\n    } else {\r\n      console.log(\"it wasnt three characters long... try again i guess?\");\r\n      setWarn({\r\n        show: true,\r\n        content:\r\n          \"Whoops, check the height you entered and try again (Accepts 5'11 or 511, etc.)\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={active === 1 ? \"phase-one active\" : \"phase-one\"}>\r\n      <div className={warn.show ? `submit-warning show` : `submit-warning`}>\r\n        <div>\r\n          <p>{warn.content}</p>\r\n          <button\r\n            name=\"closewarning\"\r\n            onClick={() =>\r\n              setWarn({\r\n                ...warn,\r\n                show: false,\r\n              })\r\n            }\r\n          >\r\n            Try Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <h1>Welcome!</h1>\r\n      <p>Please provide your Patient's details.</p>\r\n\r\n      <div className=\"mainForm\">\r\n        <div className=\"heightgrp\">\r\n          <label>\r\n            Height\r\n            <input\r\n              type=\"text\"\r\n              name=\"height\"\r\n              onChange={handleChange}\r\n              value={patient.height}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"weightgrp\">\r\n          <label>\r\n            Weight\r\n            <input\r\n              type=\"number\"\r\n              name=\"weight\"\r\n              value={patient.weight}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"agegrp\">\r\n          <label>\r\n            Age\r\n            <input\r\n              type=\"number\"\r\n              name=\"age\"\r\n              value={patient.age}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"sexgrp\">\r\n          <label>\r\n            Sex\r\n            <select name=\"sex\" value={patient.sex} onChange={handleChange}>\r\n              <option value=\"M\">M</option>\r\n              <option value=\"F\">F</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"activitygrp\">\r\n        <h4>Activity Level</h4>\r\n        <div className=\"cardbox\">\r\n          <div\r\n            className={\r\n              patient.activity === 0 ? `activityCard selected` : \"activityCard\"\r\n            }\r\n            onClick={() => setPatient({ ...patient, activity: 0 })}\r\n          >\r\n            <h6>No Minimal Activity</h6>\r\n            <p>description</p>\r\n          </div>\r\n          <div\r\n            className={\r\n              patient.activity === 1.2\r\n                ? `activityCard selected`\r\n                : \"activityCard\"\r\n            }\r\n            onClick={() => setPatient({ ...patient, activity: 1.2 })}\r\n          >\r\n            <h6>Minimal Daily Activity</h6>\r\n            <p value={1.2}>description</p>\r\n          </div>\r\n          <div\r\n            className={\r\n              patient.activity === 1.3\r\n                ? `activityCard selected`\r\n                : \"activityCard\"\r\n            }\r\n            onClick={() => setPatient({ ...patient, activity: 1.3 })}\r\n          >\r\n            <h6>Mild Daily Activity</h6>\r\n            <p value={1.3}>description</p>\r\n          </div>\r\n          <div\r\n            className={\r\n              patient.activity === 1.5\r\n                ? `activityCard selected`\r\n                : \"activityCard\"\r\n            }\r\n            onClick={() => setPatient({ ...patient, activity: 1.5 })}\r\n          >\r\n            <h6>Moderate Daily Activity</h6>\r\n            <p value={1.5}>description</p>\r\n          </div>\r\n          <div\r\n            className={\r\n              patient.activity === 1.7\r\n                ? `activityCard selected`\r\n                : \"activityCard\"\r\n            }\r\n            onClick={() => setPatient({ ...patient, activity: 1.7 })}\r\n          >\r\n            <h6>Heavy Exercise</h6>\r\n            <p value={1.7}>description</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"button\" onClick={handleSubmit}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function PatientCal({ patient, goal }) {\r\n  const [rmr, setRmr] = useState(0);\r\n  useEffect(() => {\r\n    let weightKg;\r\n    let heightCm;\r\n    let rmrvalue;\r\n    weightKg = Math.floor(patient.weight * 0.45359237);\r\n    heightCm = Math.floor((patient.heightFt * 12 + patient.heightIn) * 2.54);\r\n    if (patient.sex === \"M\") {\r\n      rmrvalue = 9.99 * weightKg + 6.25 * heightCm - 4.92 * patient.age + 5;\r\n    } else if (patient.sex === \"F\") {\r\n      rmrvalue = 9.99 * weightKg + 6.25 * heightCm - 4.92 * patient.age - 161;\r\n    }\r\n    rmrvalue = Math.floor(rmrvalue * patient.activity);\r\n    setRmr(rmrvalue);\r\n    switch (patient.activity) {\r\n      case 0:\r\n        // for loss... -250, for gain... +250\r\n        if (goal === \"lose\") {\r\n          let adjustedRmr = rmr - 250;\r\n          setRmr(adjustedRmr);\r\n        } else if (goal === \"gain\") {\r\n          let adjustedRmr = rmr + 250;\r\n          setRmr(adjustedRmr);\r\n        }\r\n        break;\r\n      case 1.2:\r\n        // for loss... -250, for gain... +250\r\n        if (goal === \"lose\") {\r\n          let adjustedRmr = rmr - 250;\r\n          setRmr(adjustedRmr);\r\n        } else if (goal === \"gain\") {\r\n          let adjustedRmr = rmr + 250;\r\n          setRmr(adjustedRmr);\r\n        }\r\n        break;\r\n      case 1.3:\r\n        // for loss... -500, for gain... +250\r\n        if (goal === \"lose\") {\r\n          let adjustedRmr = rmr - 500;\r\n          setRmr(adjustedRmr);\r\n        } else if (goal === \"gain\") {\r\n          let adjustedRmr = rmr + 500;\r\n          setRmr(adjustedRmr);\r\n        }\r\n        break;\r\n      case 1.5:\r\n        // for loss... -500, for gain... +250\r\n        if (goal === \"lose\") {\r\n          let adjustedRmr = rmr - 500;\r\n          setRmr(adjustedRmr);\r\n        } else if (goal === \"gain\") {\r\n          let adjustedRmr = rmr + 500;\r\n          setRmr(adjustedRmr);\r\n        }\r\n        break;\r\n      case 1.7:\r\n        // for loss... -500, for gain... +250\r\n        if (goal === \"lose\") {\r\n          let adjustedRmr = rmr - 500;\r\n          setRmr(adjustedRmr);\r\n        } else if (goal === \"gain\") {\r\n          let adjustedRmr = rmr + 500;\r\n          setRmr(adjustedRmr);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [patient, goal]);\r\n  return (\r\n    <div className=\"patientrmr\">\r\n      <p>{rmr}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function PlanCard({ plan, selected, setSelected }) {\r\n  return (\r\n    <div\r\n      className={selected === plan.id ? `plancard selected` : `plancard`}\r\n      onClick={() => setSelected(plan.id)}\r\n    >\r\n      {/* Add SVG Border after sizing, etc. */}\r\n      <h4>{plan.name}</h4>\r\n      <p>{plan.desc}</p>\r\n      <div>\r\n        <button>Download Plan</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport PatientCal from \"./fragments/PatientCal\";\r\nimport PlanCard from \"./fragments/PlanCard\";\r\n\r\nexport default function PhaseTwo({ active, setActive, patient }) {\r\n  const [goal, setGoal] = useState(\"maintain\");\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const plans = [\r\n    {\r\n      id: 1,\r\n      name: \"Core\",\r\n      desc: \"Description of Core\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Core Vegan\",\r\n      desc: \"Description of Vegan\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Core Vegitarian\",\r\n      desc: \"Description of Vegitarian\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Mito\",\r\n      desc: \"Description of Mito\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <section className={active === 2 ? \"phase-two active\" : \"phase-two\"}>\r\n      <h4>Patient's Resting Metabolic Rate</h4>\r\n      <PatientCal patient={patient} goal={goal} />\r\n\r\n      <ul className=\"patient-goal\">\r\n        <li\r\n          className={goal === \"lose\" ? `goal-item active` : `goal-item`}\r\n          onClick={() => setGoal(\"lose\")}\r\n        >\r\n          Lose\r\n        </li>\r\n        <li\r\n          className={goal === \"maintain\" ? `goal-item active` : `goal-item`}\r\n          onClick={() => setGoal(\"maintain\")}\r\n        >\r\n          Maintain\r\n        </li>\r\n        <li\r\n          className={goal === \"gain\" ? `goal-item active` : `goal-item`}\r\n          onClick={() => setGoal(\"gain\")}\r\n        >\r\n          Gain\r\n        </li>\r\n      </ul>\r\n      <hr style={{ width: \"75%\", margin: \"2% auto 0 auto\" }} />\r\n      <div className=\"plancard-box\">\r\n        {plans.map((plan, index) => (\r\n          <PlanCard\r\n            key={index}\r\n            plan={plan}\r\n            selected={selected}\r\n            setSelected={setSelected}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <button onClick={() => setActive(3)}>Next</button>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport PlanCard from \"./fragments/PlanCard\";\r\n\r\nexport default function PhaseThree({ active, setActive, patient }) {\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const plans = [\r\n    {\r\n      id: 1,\r\n      name: \"Core\",\r\n      desc: \"Description of Core\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Core Vegan\",\r\n      desc: \"Description of Vegan\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Core Vegitarian\",\r\n      desc: \"Description of Vegitarian\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Mito\",\r\n      desc: \"Description of Mito\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <section className={active === 3 ? \"phase-three active\" : \"phase-three\"}>\r\n      <div className=\"plancard-box\">\r\n        {plans.map((plan, index) => (\r\n          <PlanCard\r\n            key={index}\r\n            plan={plan}\r\n            selected={selected}\r\n            setSelected={setSelected}\r\n          />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\n\nimport PhaseOne from \"./components/PhaseOne\";\nimport PhaseTwo from \"./components/PhaseTwo\";\nimport PhaseThree from \"./components/PhaseThree\";\n\nimport \"./assets/sass/App.scss\";\n\nfunction App() {\n  const [active, setActive] = useState(1);\n\n  const [patient, setPatient] = useState({\n    height: \"5'8\",\n    heightFt: 0,\n    heightIn: 0,\n    weight: 100,\n    age: 40,\n    sex: \"M\",\n    activity: 0,\n    submitted: false,\n  });\n\n  return (\n    <>\n      <PhaseOne\n        active={active}\n        setActive={setActive}\n        patient={patient}\n        setPatient={setPatient}\n      />\n      <PhaseTwo\n        active={active}\n        setActive={setActive}\n        patient={patient}\n        setPatient={setPatient}\n      />\n      <PhaseThree\n        active={active}\n        setActive={setActive}\n        patient={patient}\n        setPatient={setPatient}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}